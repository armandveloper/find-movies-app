{"version":3,"sources":["data/suggest-movies.ts","context/MoviesContext.tsx","components/Searchbox.tsx","components/Header.tsx","helpers/type-guards.ts","components/MovieCard.tsx","components/MovieList.tsx","components/Spinner.tsx","components/SearchError.tsx","components/MoviesSection.tsx","components/Movie.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["suggestedMovies","initState","loading","error","data","MoviesContext","createContext","MoviesProvider","children","useState","movies","setMovies","activeMovie","setActiveMovie","getSuggestedMovies","useCallback","a","movie","fetch","resp","json","body","push","console","log","type","description","searchMovies","term","Response","Search","searchMovie","id","Provider","value","unsetActiveMovie","setMovieLoading","Searchbox","setTerm","prevTerm","setPrevTerm","useContext","onSubmit","e","preventDefault","onChange","target","className","placeholder","Header","Container","maxWidth","instanceOfMovieResponse","object","MovieCard","props","isSuggested","imdbID","Poster","Title","Year","handleMovieSearch","Grid","item","xs","sm","lg","onClick","Card","CardMedia","component","alt","image","title","md","CardContent","MovieList","container","spacing","map","Spinner","Box","height","flexGrow","display","alignItems","justifyContent","style","gridColumn","CircularProgress","size","SearchError","img","src","MoviesSection","isFirstRender","useEffect","Transition","forwardRef","ref","Slide","direction","Movie","handleClose","Dialog","fullWidth","TransitionComponent","onClose","open","aria-labelledby","IconButton","aria-label","Plot","Released","Genre","Ratings","color","marginRight","Value","split","genre","Chip","variant","label","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3885993.chunk.js","sourcesContent":["export const suggestedMovies = [\n\t'Soul',\n\t'Little Joe',\n\t'Godzilla vs Kong',\n\t'Nomadland',\n\t'Never Rarely Sometimes Always',\n\t'Joker',\n\t'Avengers: Endgame',\n\t'Mank',\n\t'Collective',\n\t'Beanpole',\n\t'The Assistant',\n\t'Wolfwalkers',\n];\n","import { createContext, PropsWithChildren, useCallback, useState } from 'react';\nimport { MoviesResponse, Search } from '../interfaces/movies.interface';\nimport { MovieResponse } from '../interfaces/movie.interface';\nimport { suggestedMovies } from '../data/suggest-movies';\n\ninterface MovieError {\n\ttype: string;\n\tdescription: string;\n}\n\ninterface MoviesState {\n\tloading: boolean;\n\terror: MovieError | null;\n\tdata: Search[] | MovieResponse[] | null;\n}\n\ninterface MovieState {\n\tloading: boolean;\n\terror: MovieError | null;\n\tdata: MovieResponse | null;\n}\n\ninterface MoviesContextInterface {\n\tmovies: MoviesState;\n\tactiveMovie: MovieState | null;\n\tsearchMovies(term: string): void;\n\tgetSuggestedMovies(): void;\n\tsearchMovie(id: string): void;\n\tunsetActiveMovie(): void;\n\tsetMovieLoading(): void;\n}\n\nconst initState = {\n\tloading: true,\n\terror: null,\n\tdata: null,\n};\n\nexport const MoviesContext = createContext({} as MoviesContextInterface);\n\nexport const MoviesProvider = ({ children }: PropsWithChildren<{}>) => {\n\t// Estado para las sugerencias al inicio y los resultados de búsqueda\n\tconst [movies, setMovies] = useState<MoviesState>(initState);\n\n\t// Estado para la película visualizada en un modal\n\tconst [activeMovie, setActiveMovie] = useState<MovieState | null>(null);\n\n\tconst reset = () => setMovies(initState);\n\n\tconst getSuggestedMovies = useCallback(async () => {\n\t\ttry {\n\t\t\tconst data: MovieResponse[] = [];\n\t\t\tfor (const movie of suggestedMovies) {\n\t\t\t\tconst resp = await fetch(\n\t\t\t\t\t`http://www.omdbapi.com/?apikey=99c57d3&t=${movie}`\n\t\t\t\t);\n\t\t\t\tconst body: MovieResponse = await resp.json();\n\t\t\t\tdata.push(body);\n\t\t\t}\n\t\t\tsetMovies({ loading: false, error: null, data });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetMovies({\n\t\t\t\tloading: false,\n\t\t\t\terror: {\n\t\t\t\t\ttype: 'BackendError',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Something went wrong on our end. Try to refresh the page',\n\t\t\t\t},\n\t\t\t\tdata: null,\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tconst searchMovies = async (term: string) => {\n\t\treset();\n\t\ttry {\n\t\t\tconst resp = await fetch(\n\t\t\t\t`http://www.omdbapi.com/?apikey=99c57d3&s=${term}`\n\t\t\t);\n\t\t\tconst data: MoviesResponse = await resp.json();\n\t\t\tif (data.Response === 'True') {\n\t\t\t\treturn setMovies({\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: null,\n\t\t\t\t\tdata: data.Search,\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetMovies({\n\t\t\t\tloading: false,\n\t\t\t\terror: {\n\t\t\t\t\ttype: 'SearchError',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t\"We couldn't find that movie. Rephrase the search term and try again\",\n\t\t\t\t},\n\t\t\t\tdata: null,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetMovies({\n\t\t\t\tloading: false,\n\t\t\t\terror: {\n\t\t\t\t\ttype: 'BackendError',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Something went wrong on our end. Try to refresh the page',\n\t\t\t\t},\n\t\t\t\tdata: null,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst searchMovie = async (id: string) => {\n\t\ttry {\n\t\t\tconst resp = await fetch(\n\t\t\t\t`http://www.omdbapi.com/?apikey=99c57d3&i=${id}&plot=full`\n\t\t\t);\n\t\t\tconst data: MovieResponse = await resp.json();\n\t\t\tif (data.Response === 'True') {\n\t\t\t\treturn setActiveMovie({ loading: false, error: null, data });\n\t\t\t}\n\t\t\tsetActiveMovie({\n\t\t\t\tloading: false,\n\t\t\t\terror: {\n\t\t\t\t\ttype: 'SearchError',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t\"We couldn't find that movie. Rephrase the search term and try again\",\n\t\t\t\t},\n\t\t\t\tdata: null,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetActiveMovie({\n\t\t\t\tloading: false,\n\t\t\t\terror: {\n\t\t\t\t\ttype: 'BackendError',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Something went wrong on our end. Try to refresh the page',\n\t\t\t\t},\n\t\t\t\tdata: null,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst unsetActiveMovie = () => setActiveMovie(null);\n\n\tconst setMovieLoading = () =>\n\t\tsetActiveMovie({ loading: true, error: null, data: null });\n\n\treturn (\n\t\t<MoviesContext.Provider\n\t\t\tvalue={{\n\t\t\t\tmovies,\n\t\t\t\tactiveMovie,\n\t\t\t\tsearchMovies,\n\t\t\t\tgetSuggestedMovies,\n\t\t\t\tsearchMovie,\n\t\t\t\tunsetActiveMovie,\n\t\t\t\tsetMovieLoading,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</MoviesContext.Provider>\n\t);\n};\n","import { SyntheticEvent, useContext, useState } from 'react';\nimport { MoviesContext } from '../context/MoviesContext';\n\nfunction Searchbox() {\n\tconst [term, setTerm] = useState('');\n\tconst [prevTerm, setPrevTerm] = useState(term);\n\n\tconst { searchMovies } = useContext(MoviesContext);\n\n\tconst handleSearch = (e: SyntheticEvent) => {\n\t\te.preventDefault();\n\t\tif (!term || prevTerm === term) return;\n\t\t// Buscar\n\t\tsearchMovies(term);\n\t\tsetPrevTerm(term);\n\t\tsetTerm('');\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSearch}>\n\t\t\t<input\n\t\t\t\tvalue={term}\n\t\t\t\tonChange={({ target }) => setTerm(target.value)}\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"searchbox__input\"\n\t\t\t\tplaceholder=\"E.g. Harry Potter\"\n\t\t\t/>\n\t\t</form>\n\t);\n}\n\nexport default Searchbox;\n","import Container  from \"@material-ui/core/Container\";\nimport Searchbox from \"./Searchbox\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <Container maxWidth=\"lg\">\n        <h1>Find movies</h1>\n        <Searchbox />\n      </Container>\n\n    </header>\n  )\n}\n\nexport default Header;\n","import { MovieResponse } from '../interfaces/movie.interface';\n\n// Ayuda a saber si se el objeto es producido en el primer render o como resultado de búsqueda\n\nexport function instanceOfMovieResponse(object: any): object is MovieResponse {\n\treturn 'Plot' in object;\n}\n","import { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { MoviesContext } from '../context/MoviesContext';\nimport { instanceOfMovieResponse } from '../helpers/type-guards';\n\ninterface CardProps {\n\timdbID: string;\n\tPoster: string;\n\tTitle: string;\n\tYear: string;\n}\n\nfunction MovieCard(props: CardProps) {\n\tconst { searchMovie, setMovieLoading } = useContext(MoviesContext);\n\n\tconst isSuggested = instanceOfMovieResponse(props);\n\n\tconst { imdbID, Poster, Title, Year } = props;\n\n\tconst handleMovieSearch = () => {\n\t\tsetMovieLoading();\n\t\tsearchMovie(imdbID);\n\t};\n\n\tif (isSuggested) {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={6}\n\t\t\t\tsm={4}\n\t\t\t\tlg={3}\n\t\t\t\tclassName=\"movie\"\n\t\t\t\tonClick={handleMovieSearch}\n\t\t\t>\n\t\t\t\t<Card>\n\t\t\t\t\t<div className=\"movie__img\">\n\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\t\talt={Title}\n\t\t\t\t\t\t\timage={\n\t\t\t\t\t\t\t\tPoster === 'N/A'\n\t\t\t\t\t\t\t\t\t? '/img/not-available.jpg'\n\t\t\t\t\t\t\t\t\t: Poster\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttitle={Title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\txs={12}\n\t\t\tsm={6}\n\t\t\tmd={4}\n\t\t\tlg={3}\n\t\t\tclassName=\"movie movie--with-content\"\n\t\t\tonClick={handleMovieSearch}\n\t\t>\n\t\t\t<Card>\n\t\t\t\t<div className=\"movie__img\">\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\talt={Title}\n\t\t\t\t\t\timage={\n\t\t\t\t\t\t\tPoster === 'N/A' ? '/img/not-available.jpg' : Poster\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttitle={Title}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<h3 className=\"movie__title\">{Title}</h3>\n\t\t\t\t\t<p className=\"movie__year\">({Year})</p>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</Grid>\n\t);\n}\n\nexport default MovieCard;\n","import Grid from '@material-ui/core/Grid';\nimport MovieCard from './MovieCard';\nimport { Search } from '../interfaces/movies.interface';\nimport { MovieResponse } from '../interfaces/movie.interface';\n\ninterface MovieListProps {\n\tmovies: Search[] | MovieResponse[] | null;\n}\n\nfunction MovieList({ movies }: MovieListProps) {\n\treturn (\n\t\t<Grid container spacing={3}>\n\t\t\t{movies?.map((movie: Search | MovieResponse) => (\n\t\t\t\t<MovieCard key={movie.imdbID} {...movie} />\n\t\t\t))}\n\t\t</Grid>\n\t);\n}\n\nexport default MovieList;\n","import Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Spinner() {\n\treturn (\n\t\t<Box\n\t\t\theight=\"100%\"\n\t\t\tflexGrow={1}\n\t\t\tdisplay=\"flex\"\n\t\t\talignItems=\"center\"\n\t\t\tjustifyContent=\"center\"\n\t\t\tstyle={{ gridColumn: '1 / -1' }}\n\t\t>\n\t\t\t<CircularProgress size={96} className=\"progress-color\" />\n\t\t</Box>\n\t);\n}\n\nexport default Spinner;\n","import Box from '@material-ui/core/Box';\n\ninterface SearchErrorProps {\n\ttype: string;\n\ttitle?: string;\n\tdescription: string;\n}\nfunction SearchError({\n\ttype,\n\ttitle = 'Oops...',\n\tdescription,\n}: SearchErrorProps) {\n\tconst img =\n\t\ttype === 'BackendError'\n\t\t\t? '/img/surprised.svg'\n\t\t\t: '/img/magnifying-glass.svg';\n\n\treturn (\n\t\t<Box\n\t\t\theight=\"100%\"\n\t\t\tflexGrow={1}\n\t\t\tdisplay=\"flex\"\n\t\t\talignItems=\"center\"\n\t\t\tjustifyContent=\"center\"\n\t\t>\n\t\t\t<div className=\"search-error\">\n\t\t\t\t<img src={img} alt={title} className=\"search-error__img\" />\n\t\t\t\t<h3 className=\"search-error__title\">{title}</h3>\n\t\t\t\t<p>{description}</p>\n\t\t\t</div>\n\t\t</Box>\n\t);\n}\n\nexport default SearchError;\n","import { useContext, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport MovieList from './MovieList';\nimport Spinner from './Spinner';\nimport SearchError from './SearchError';\nimport { MoviesContext } from '../context/MoviesContext';\nimport { instanceOfMovieResponse } from '../helpers/type-guards';\n\nfunction MoviesSection() {\n\tconst { getSuggestedMovies, movies } = useContext(MoviesContext);\n\n\tconst isFirstRender = movies.data\n\t\t? instanceOfMovieResponse(movies.data[0])\n\t\t: false;\n\n\tuseEffect(() => {\n\t\tgetSuggestedMovies();\n\t}, [getSuggestedMovies]);\n\n\treturn (\n\t\t<main>\n\t\t\t<Container maxWidth=\"lg\" className=\"container-center\">\n\t\t\t\t{movies.loading ? (\n\t\t\t\t\t<Spinner />\n\t\t\t\t) : movies.error ? (\n\t\t\t\t\t<SearchError\n\t\t\t\t\t\ttype={movies.error.type}\n\t\t\t\t\t\tdescription={movies.error.description}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t{isFirstRender\n\t\t\t\t\t\t\t\t? 'You might like'\n\t\t\t\t\t\t\t\t: 'Search results'}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<MovieList movies={movies.data} />\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</main>\n\t);\n}\n\nexport default MoviesSection;\n","import { forwardRef, ReactElement, Ref } from 'react';\nimport { useContext } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StarIcon from '@material-ui/icons/Star';\n\nimport { MoviesContext } from '../context/MoviesContext';\nimport Spinner from './Spinner';\nimport SearchError from './SearchError';\n\nconst Transition = forwardRef(function Transition(\n\tprops: TransitionProps & { children?: ReactElement<any, any> },\n\tref: Ref<unknown>\n) {\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction Movie() {\n\tconst { activeMovie, unsetActiveMovie } = useContext(MoviesContext);\n\n\tif (!activeMovie) return <></>;\n\n\tconst handleClose = () => unsetActiveMovie();\n\n\tif (activeMovie.loading) {\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\tfullWidth={true}\n\t\t\t\tmaxWidth=\"lg\"\n\t\t\t\tTransitionComponent={Transition}\n\t\t\t\tonClose={handleClose}\n\t\t\t\topen={activeMovie !== null}\n\t\t\t\taria-labelledby=\"Movie dialog\"\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label=\"Close Dialog\"\n\t\t\t\t\tclassName=\"movie-dialog__close\"\n\t\t\t\t\tonClick={handleClose}\n\t\t\t\t>\n\t\t\t\t\t<CloseIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<div className=\"movie-dialog__grid movie-dialog__grid--center\">\n\t\t\t\t\t<Spinner />\n\t\t\t\t</div>\n\t\t\t</Dialog>\n\t\t);\n\t}\n\n\tif (activeMovie.error) {\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\tfullWidth={true}\n\t\t\t\tmaxWidth=\"lg\"\n\t\t\t\tTransitionComponent={Transition}\n\t\t\t\tonClose={handleClose}\n\t\t\t\topen={activeMovie !== null}\n\t\t\t\taria-labelledby=\"Movie dialog\"\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label=\"Close Dialog\"\n\t\t\t\t\tclassName=\"movie-dialog__close\"\n\t\t\t\t\tonClick={handleClose}\n\t\t\t\t>\n\t\t\t\t\t<CloseIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<div className=\"movie-dialog__grid movie-dialog__grid--center\">\n\t\t\t\t\t<SearchError\n\t\t\t\t\t\ttype={activeMovie.error.type}\n\t\t\t\t\t\tdescription={activeMovie.error.description}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Dialog>\n\t\t);\n\t}\n\n\tif (!activeMovie?.data) return <></>;\n\n\tconst { Title, Plot, Released, Poster, Genre, Ratings } = activeMovie?.data;\n\n\treturn (\n\t\t<Dialog\n\t\t\tfullWidth={true}\n\t\t\tmaxWidth=\"lg\"\n\t\t\tTransitionComponent={Transition}\n\t\t\tonClose={handleClose}\n\t\t\topen={activeMovie !== null}\n\t\t\taria-labelledby=\"Movie dialog\"\n\t\t>\n\t\t\t<IconButton\n\t\t\t\taria-label=\"Close Dialog\"\n\t\t\t\tclassName=\"movie-dialog__close\"\n\t\t\t\tonClick={handleClose}\n\t\t\t>\n\t\t\t\t<CloseIcon />\n\t\t\t</IconButton>\n\t\t\t<div className=\"movie-dialog__grid\">\n\t\t\t\t<img src={Poster} alt={Title} className=\"movie-dialog__media\" />\n\t\t\t\t<div className=\"movie-dialog__top\">\n\t\t\t\t\t<h1>{Title}</h1>\n\t\t\t\t\t<div className=\"movie-dialog__meta\">\n\t\t\t\t\t\t<span>{Released}</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<StarIcon\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: '#FFD560',\n\t\t\t\t\t\t\t\t\tmarginRight: '0.4rem',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{Ratings[0].Value}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"movie-dialog__main\">\n\t\t\t\t\t<div className=\"movie-dialog__genres\">\n\t\t\t\t\t\t{Genre.split(', ').map((genre: string) => (\n\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\tkey={genre}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tlabel={genre}\n\t\t\t\t\t\t\t\tclassName=\"chip--genre\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"movie__overview\">\n\t\t\t\t\t\t<p>{Plot}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n}\n\nexport default Movie;\n","import Header from './components/Header';\nimport MoviesSection from './components/MoviesSection';\nimport Movie from './components/Movie';\nimport { MoviesProvider } from './context/MoviesContext';\n\nfunction App() {\n\treturn (\n\t\t<MoviesProvider>\n\t\t\t<div className=\"app\">\n\t\t\t\t<Header />\n\t\t\t\t<MoviesSection />\n\t\t\t\t<Movie />\n\t\t\t</div>\n\t\t</MoviesProvider>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}